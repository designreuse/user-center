<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ychp.club.auth.model.mysql.AppRepository">
    <resultMap id="listMap" type="com.ychp.club.auth.model.App" >
    </resultMap>
    <parameterMap id="paramMap" type="com.ychp.club.auth.model.App"></parameterMap>

    <sql id="tb">`auth_apps`</sql>

    <sql id="allColumns">`id`,<include refid="columns"/></sql>

    <sql id="columns">`name`, `key`, `secret`, `domain`, `created_at`, `updated_at`</sql>

    <sql id="values">#{name}, #{key}, #{secret}, #{domain}</sql>

    <insert id="create" parameterMap="paramMap" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO <include refid="tb"/>
        (<include refid="columns"/>)VALUES (<include refid="values"/>,now(),now())
    </insert>

    <insert id="creates" parameterMap="paramMap" useGeneratedKeys="true">
        INSERT INTO <include refid="tb"/>
        (<include refid="columns"/>) VALUES
        <foreach collection="list" item="user" separator=",">
            (<include refid="values"/>,now(),now())
        </foreach>
    </insert>

    <update id="update" parameterMap="paramMap" >
        UPDATE <include refid="tb"/>
        SET
        <if test="name !=null">`name`=#{name},</if>
        <if test="key !=null">`key`=#{key},</if>
        <if test="secret !=null">`secret`=#{secret},</if>
        <if test="domain !=null">`domain`=#{domain},</if>
        `updated_at`= now()
        WHERE id = #{id}
    </update>

    <sql id="criteria">
        WHERE 1=1
        <if test="id != null">AND `id`=#{id}</if>
        <if test="name != null">AND `name`=#{name}</if>
        <if test="key !=null">AND `key`=#{key}</if>
        <if test="secret !=null">AND `secret`=#{secret}</if>
        <if test="domain !=null">AND `domain`=#{domain}</if>
    </sql>

    <select id="findById" parameterType="long" resultMap="listMap">
        SELECT * FROM <include refid="tb"/> WHERE id = #{id}
    </select>

    <delete id="delete" >
        DELETE FROM <include refid="tb"/> WHERE id=#{id}
    </delete>

    <select id="findListBy" parameterType="map" resultMap="listMap">
        SELECT * FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <select id="countBy" parameterType="map" resultType="long">
        SELECT count(*) FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <select id="pagingBy" parameterType="map" resultMap="listMap">
        SELECT * FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
        LIMIT #{offset},#{limit}
    </select>
</mapper>